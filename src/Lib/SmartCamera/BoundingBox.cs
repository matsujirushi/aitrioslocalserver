// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SmartCamera
{

[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
public enum BoundingBox : byte
{
  NONE = 0,
  BoundingBox2d = 1,
};

public class BoundingBoxUnion {
  public BoundingBox Type { get; set; }
  public object Value { get; set; }

  public BoundingBoxUnion() {
    this.Type = BoundingBox.NONE;
    this.Value = null;
  }

  public T As<T>() where T : class { return this.Value as T; }
  public SmartCamera.BoundingBox2dT AsBoundingBox2d() { return this.As<SmartCamera.BoundingBox2dT>(); }
  public static BoundingBoxUnion FromBoundingBox2d(SmartCamera.BoundingBox2dT _boundingbox2d) { return new BoundingBoxUnion{ Type = BoundingBox.BoundingBox2d, Value = _boundingbox2d }; }

  public static int Pack(Google.FlatBuffers.FlatBufferBuilder builder, BoundingBoxUnion _o) {
    switch (_o.Type) {
      default: return 0;
      case BoundingBox.BoundingBox2d: return SmartCamera.BoundingBox2d.Pack(builder, _o.AsBoundingBox2d()).Value;
    }
  }
}

public class BoundingBoxUnion_JsonConverter : Newtonsoft.Json.JsonConverter {
  public override bool CanConvert(System.Type objectType) {
    return objectType == typeof(BoundingBoxUnion) || objectType == typeof(System.Collections.Generic.List<BoundingBoxUnion>);
  }
  public override void WriteJson(Newtonsoft.Json.JsonWriter writer, object value, Newtonsoft.Json.JsonSerializer serializer) {
    var _olist = value as System.Collections.Generic.List<BoundingBoxUnion>;
    if (_olist != null) {
      writer.WriteStartArray();
      foreach (var _o in _olist) { this.WriteJson(writer, _o, serializer); }
      writer.WriteEndArray();
    } else {
      this.WriteJson(writer, value as BoundingBoxUnion, serializer);
    }
  }
  public void WriteJson(Newtonsoft.Json.JsonWriter writer, BoundingBoxUnion _o, Newtonsoft.Json.JsonSerializer serializer) {
    if (_o == null) return;
    serializer.Serialize(writer, _o.Value);
  }
  public override object ReadJson(Newtonsoft.Json.JsonReader reader, System.Type objectType, object existingValue, Newtonsoft.Json.JsonSerializer serializer) {
    var _olist = existingValue as System.Collections.Generic.List<BoundingBoxUnion>;
    if (_olist != null) {
      for (var _j = 0; _j < _olist.Count; ++_j) {
        reader.Read();
        _olist[_j] = this.ReadJson(reader, _olist[_j], serializer);
      }
      reader.Read();
      return _olist;
    } else {
      return this.ReadJson(reader, existingValue as BoundingBoxUnion, serializer);
    }
  }
  public BoundingBoxUnion ReadJson(Newtonsoft.Json.JsonReader reader, BoundingBoxUnion _o, Newtonsoft.Json.JsonSerializer serializer) {
    if (_o == null) return null;
    switch (_o.Type) {
      default: break;
      case BoundingBox.BoundingBox2d: _o.Value = serializer.Deserialize<SmartCamera.BoundingBox2dT>(reader); break;
    }
    return _o;
  }
}



static public class BoundingBoxVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, byte typeId, uint tablePos)
  {
    bool result = true;
    switch((BoundingBox)typeId)
    {
      case BoundingBox.BoundingBox2d:
        result = SmartCamera.BoundingBox2dVerify.Verify(verifier, tablePos);
        break;
      default: result = true;
        break;
    }
    return result;
  }
}


}
